version: 2.1

orbs:
  maven: circleci/maven@1.0.1
  openjdk-install: cloudesire/openjdk-install@1.2.3


workflows:

  build_and_test_SDK:
    jobs:
      - maven-build-and-test


  deploy:
    when:
      and: # All must be true to trigger
        - equal: [ release, <<pipeline.git.branch >> ]
    jobs:
      - deploy-to-maven-central



jobs:
  maven-build-and-test:
    description: |
      This job relies on the official circleci maven Orb!
      Documentation for this Orb is here: https://circleci.com/orbs/registry/orb/circleci/maven?version=1.0.1
      NOTE: make sure to read correct version of docs :)
    working_directory: ~/projects/openEHR_SDK
    docker:
      # Primary container w/ Maven & Java JDK
      # NOTE: all commands run here
      - image: cimg/openjdk:11.0

      # Secondary (service) container w/ PostgreSQL DB
      # NOTE: DB is available at `host: localhost`
      - image: ehrbaseorg/ehrbase-postgres:latest
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    steps:
      - checkout
      - run: pwd
      - run: ls -la
      
      - run:
          name: Generate Cache Checksum for openEHR_SDK Dependencies
          command: find . -name 'pom.xml' | sort | xargs cat > /tmp/openEHR_SDK_maven_cache_seed
      - restore_cache:
          key: openEHR_SDK-{{ checksum "/tmp/openEHR_SDK_maven_cache_seed" }}
      - save_cache:
          key: openEHR_SDK-{{ checksum "/tmp/openEHR_SDK_maven_cache_seed" }}
          paths:
          - ~/.m2

      - run:
          name: Maven build, test, install openEHR_SDK
          command: mvn install
      - store_test_results:
          path: client/target/surefire-reports
      # - persist_to_workspace:
      #     root: /home/circleci
      #     paths:
      #       - .m2
      - run:
          name: Checkout EHRbase repo
          command: |
            cd ..
            git clone git@github.com:ehrbase/ehrbase.git

      - run:
          name: Generate Cache Checksum for EHRbase Dependencies
          command: find ~/projects/ehrbase -name 'pom.xml' | sort | xargs cat > /tmp/EHRbase_maven_cache_seed
      - restore_cache:
          key: EHRbase-{{ checksum "/tmp/EHRbase_maven_cache_seed" }}
      - save_cache:
          key: EHRbase-{{ checksum "/tmp/EHRbase_maven_cache_seed" }}
          paths:
          - ~/.m2

      - run:
          name: Maven build EHRbase again
          command: |
            cd ~/projects/ehrbase
            ls -la
            git checkout snapshot_0.3.1
            mvn package

  


  deploy-to-maven-central:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - run:
          command: |
            pwd
            java --version
            mvn --version
            echo deployed



# 1. build & (unit)test the SDK
# 2. build & (unit)test EHRbase w/ SDK (as local dependency)
#    NOTE: make sure EHRbase is build w/ latest commit to SDK
# 3. run integation tests
#    - setup test environment
#    - execute robot tests
# 4. deploy (to maven central?)





commands:
  #     ,ad8888ba,    ,ad8888ba,    88b           d88  88b           d88         db         888b      88  88888888ba,     ad88888ba
  #    d8"'    `"8b  d8"'    `"8b   888b         d888  888b         d888        d88b        8888b     88  88      `"8b   d8"     "8b
  #   d8'           d8'        `8b  88`8b       d8'88  88`8b       d8'88       d8'`8b       88 `8b    88  88        `8b  Y8,
  #   88            88          88  88 `8b     d8' 88  88 `8b     d8' 88      d8'  `8b      88  `8b   88  88         88  `Y8aaaaa,
  #   88            88          88  88  `8b   d8'  88  88  `8b   d8'  88     d8YaaaaY8b     88   `8b  88  88         88    `"""""8b,
  #   Y8,           Y8,        ,8P  88   `8b d8'   88  88   `8b d8'   88    d8""""""""8b    88    `8b 88  88         8P          `8b
  #    Y8a.    .a8P  Y8a.    .a8P   88    `888'    88  88    `888'    88   d8'        `8b   88     `8888  88      .a8P   Y8a     a8P
  #     `"Y8888Y"'    `"Y8888Y"'    88     `8'     88  88     `8'     88  d8'          `8b  88      `888  88888888Y"'     "Y88888P"


  # install-openjdk:
  #   parameters:
  #     version:
  #       type: integer
  #       default: 8
  #     cache_version:
  #       type: integer
  #       default: 1
  #   steps:
  #     - run:
  #         name: Workaround for running apt behind the scene
  #         command: |
  #           sudo killall -9 apt-get || true
  #     # - run:
  #     #     name: Switch to US mirror for faster performances
  #     #     command: sudo sed -i 's/\/\/archive.ubuntu.com/\/\/us.archive.ubuntu.com/g' /etc/apt/sources.list
  #     - run:
  #         name: Add openjdk-r PPA
  #         command: |
  #           sudo add-apt-repository ppa:openjdk-r/ppa
  #           sudo apt-get update
  #     - run:
  #         name: Generate cache version
  #         command: |
  #           apt-cache policy openjdk-<< parameters.version >>-jdk | grep 'Candidate:' | cut -d' ' -f4 > .openjdk_version
  #           cat .openjdk_version
  #     - restore_cache:
  #         keys:
  #         - apt-cache-{{ checksum ".openjdk_version" }}-v<< parameters.cache_version >>
  #     - run:
  #         name: Create temp directory if restore cache didn't
  #         command: mkdir -p /tmp/archives
  #     - run:
  #         name: Restore apt cache
  #         command: sudo rsync -av /tmp/archives/ /var/cache/apt/archives/
  #     - run:
  #         name: Install openjdk-<< parameters.version >>-jdk
  #         command: sudo apt-get install -y openjdk-<< parameters.version >>-jdk
  #     - run: 
  #         name: Make installed openjdk the default Java version
  #         command: sudo update-java-alternatives --set java-1.<< parameters.version >>.0-openjdk-amd64
  #     - run:
  #         name: Prepare to save apt cache
  #         command: rsync -av /var/cache/apt/archives/*.deb /tmp/archives/
  #     - save_cache:
  #         key: apt-cache-{{ checksum ".openjdk_version" }}-v<< parameters.cache_version >>
  #         paths:
  #         - /tmp/archives
